{
    "collab_server" : "",
    "contents" : "#  Introduction\n## ══════════════\n\n#   • Learning objectives:\n##     • Learn the R formula interface\n##     • Specify factor contrasts to test specific hypotheses\n##     • Perform model comparisons\n##     • Run and interpret variety of regression models in R\n\n## Set working directory\n## ─────────────────────────\n\n##   It is often helpful to start your R session by setting your working\n##   directory so you don't have to type the full path names to your data\n##   and other files\n\n# set the working directory\n# setwd(\"~/Desktop/Rstatistics\")\n# setwd(\"C:/Users/dataclass/Desktop/Rstatistics\")\n\n##   You might also start by listing the files in your working directory\n\ngetwd() # where am I?\nlist.files(\"dataSets\") # files in the dataSets folder\n\n## Load the states data\n## ────────────────────────\n\n# read the states data\nstates.data <- readRDS(\"dataSets/states.rds\") \n#get labels\nstates.info <- data.frame(attributes(states.data)[c(\"names\", \"var.labels\")])\n#look at last few labels\ntail(states.info, 8)\n\n## Linear regression\n## ═══════════════════\n\n## Examine the data before fitting models\n## ──────────────────────────────────────────\n\n##   Start by examining the data to check for problems.\n\n# summary of expense and csat columns, all rows\nsts.ex.sat <- subset(states.data, select = c(\"expense\", \"csat\"))\nsummary(sts.ex.sat)\n# correlation between expense and csat\ncor(sts.ex.sat)\n\n## Plot the data before fitting models\n## ───────────────────────────────────────\n\n##   Plot the data to look for multivariate outliers, non-linear\n##   relationships etc.\n\n# scatter plot of expense vs csat\nplot(sts.ex.sat)\n\n## Linear regression example\n## ─────────────────────────────\n\n##   • Linear regression models can be fit with the `lm()' function\n##   • For example, we can use `lm' to predict SAT scores based on\n##     per-pupal expenditures:\n\n# Fit our regression model\nsat.mod <- lm(csat ~ expense, # regression formula\n              data=states.data) # data set\n# Summarize and print the results\nsummary(sat.mod) # show regression coefficients table\n\n## Why is the association between expense and SAT scores /negative/?\n## ─────────────────────────────────────────────────────────────────────\n\n##   Many people find it surprising that the per-capita expenditure on\n##   students is negatively related to SAT scores. The beauty of multiple\n##   regression is that we can try to pull these apart. What would the\n##   association between expense and SAT scores be if there were no\n##   difference among the states in the percentage of students taking the\n##   SAT?\n\nsummary(lm(csat ~ expense + percent, data = states.data))\n\n## The lm class and methods\n## ────────────────────────────\n\n##   OK, we fit our model. Now what?\n##   • Examine the model object:\n\nclass(sat.mod)\nnames(sat.mod)\nmethods(class = class(sat.mod))[1:9]\n\n##   • Use function methods to get more information about the fit\n\nconfint(sat.mod)\n# hist(residuals(sat.mod))\n\n## Linear Regression Assumptions\n## ─────────────────────────────────\n\n##   • Ordinary least squares regression relies on several assumptions,\n##     including that the residuals are normally distributed and\n##     homoscedastic, the errors are independent and the relationships are\n##     linear.\n\n##   • Investigate these assumptions visually by plotting your model:\n\npar(mar = c(4, 4, 2, 2), mfrow = c(1, 2)) #optional\nplot(sat.mod, which = c(1, 2)) # \"which\" argument optional\n\n## Comparing models\n## ────────────────────\n\n##   Do congressional voting patterns predict SAT scores over and above\n##   expense? Fit two models and compare them:\n\n# fit another model, adding house and senate as predictors\nsat.voting.mod <-  lm(csat ~ expense + house + senate,\n                      data = na.omit(states.data))\nsat.mod <- update(sat.mod, data=na.omit(states.data))\n# compare using the anova() function\nanova(sat.mod, sat.voting.mod)\ncoef(summary(sat.voting.mod))\n\n## Exercise: least squares regression\n## ────────────────────────────────────────\n\n##   Use the /states.rds/ data set. Fit a model predicting energy consumed\n##   per capita (energy) from the percentage of residents living in\n##   metropolitan areas (metro). Be sure to\n##   1. Examine/plot the data before fitting the model\n##   2. Print and interpret the model `summary'\n##   3. `plot' the model to look for deviations from modeling assumptions\n\n##   Select one or more additional predictors to add to your model and\n##   repeat steps 1-3. Is this model significantly better than the model\n##   with /metro/ as the only predictor?\n\n## Interactions and factors\n## ══════════════════════════\n\n## Modeling interactions\n## ─────────────────────────\n\n##   Interactions allow us assess the extent to which the association\n##   between one predictor and the outcome depends on a second predictor.\n##   For example: Does the association between expense and SAT scores\n##   depend on the median income in the state?\n\n  #Add the interaction to the model\nsat.expense.by.percent <- lm(csat ~ expense*income,\n                             data=states.data) \n#Show the results\n  coef(summary(sat.expense.by.percent)) # show regression coefficients table\n\n## Regression with categorical predictors\n## ──────────────────────────────────────────\n\n##   Let's try to predict SAT scores from region, a categorical variable.\n##   Note that you must make sure R does not think your categorical\n##   variable is numeric.\n\n# make sure R knows region is categorical\nstr(states.data$region)\nstates.data$region <- factor(states.data$region)\n#Add region to the model\nsat.region <- lm(csat ~ region,\n                 data=states.data) \n#Show the results\ncoef(summary(sat.region)) # show regression coefficients table\nanova(sat.region) # show ANOVA table\n\n##   Again, *make sure to tell R which variables are categorical by\n##   converting them to factors!*\n\n## Setting factor reference groups and contrasts\n## ─────────────────────────────────────────────────\n\n##   In the previous example we use the default contrasts for region. The\n##   default in R is treatment contrasts, with the first level as the\n##   reference. We can change the reference group or use another coding\n##   scheme using the `C' function.\n\n# print default contrasts\ncontrasts(states.data$region)\n# change the reference group\ncoef(summary(lm(csat ~ C(region, base=4),\n                data=states.data)))\n# change the coding scheme\ncoef(summary(lm(csat ~ C(region, contr.helmert),\n                data=states.data)))\n\n##   See also `?contrasts', `?contr.treatment', and `?relevel'.\n\n## Exercise: interactions and factors\n## ────────────────────────────────────────\n\n##   Use the states data set.\n\n##   1. Add on to the regression equation that you created in exercise 1 by\n##      generating an interaction term and testing the interaction.\n\n##   2. Try adding region to the model. Are there significant differences\n##      across the four regions?\n",
    "created" : 1475181868013.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "997885342",
    "id" : "5C7F68C",
    "lastKnownWriteTime" : 1475181794,
    "last_content_update" : 1475181794,
    "path" : "~/data-science/linear_regression/linear_regression-master.R",
    "project_path" : "linear_regression-master.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}